properties([pipelineTriggers([githubPush()])])

pipeline {

  environment {
    dockerimagename = "qprofilesdemo/python:latest"
    dockerImage = ""
  }

  agent any

  stages {


stage('Checkout SCM') {
  steps {
    checkout([
      $class: 'GitSCM',
      branches: [[name: 'main']],
      userRemoteConfigs: [[
        url: 'https://github.com/sushil320/K8S_QP.git',
        credentialsId: '',
      ]]
     ])
   }
}

		
	    stage ('Build image') {
            agent { label 'build-server' }
            steps {
                script {
					    sh 'rm -rf demo-webapp'
					     sh "git clone https://github.com/sushil320/K8S_QP.git"
						 //sh 'sudo docker build -t qprofilesdemo/python demo-webapp '      
						 dockerImage = docker.build(dockerimagename, "./demo-webapp")

                }
            }
        }
	

    stage('Pushing Image') {
	  agent { label 'build-server' }
      environment {
               registryCredential = 'dockerhublogin'
           }
      steps{
        script {
     withDockerRegistry([ credentialsId: "Dockercred", url: "" ]) {
        dockerImage.push()
        }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          sshagent(['k8s']) {
    	      
		       sh 'ssh -o StrictHostKeyChecking=no -l ubuntu 3.109.213.35 rm -rf demo-webapp'
		       sh 'ssh -o StrictHostKeyChecking=no -l ubuntu 3.109.213.35 git clone https://github.com/sushil320/K8S_QP.git'
		       sh 'ssh -o StrictHostKeyChecking=no -l ubuntu 3.109.213.35 kubectl delete -f demo-webapp/deployment.yaml'
		       sh 'ssh -o StrictHostKeyChecking=no -l ubuntu 3.109.213.35 kubectl apply -f demo-webapp/deployment.yaml'

          }
        }
      }
    }

  }

}
